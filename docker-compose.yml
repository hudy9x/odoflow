version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3001
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:dainh4123@postgres:5432/odoflow
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=odoflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dainh4123
    ports:
      - "5430:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*'
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7.2-alpine
    restart: always
    ports:
      - "6370:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge