services:
  odo-frontend:
    build:
      context: .
      dockerfile: ./docker/frontend.Dockerfile
    ports:
      - "3100:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://odo-backend:3200
      - NEXT_PUBLIC_WEBSOCKET_URL=ws://odo-backend:3200
      - NEXT_PUBLIC_WEBHOOK_TRIGGER_URL=http://odo-backend:3200/webhook/trigger
    depends_on:
      - odo-backend
    networks:
      - odo-app-network

  odo-backend:
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    ports:
      - "3200:3003"
    environment:
      - DATABASE_URL=postgresql://postgres:dainh4123@odo-db:5432/odoflow?schema=public
      - FRONTEND_URL=http://odo-frontend:3100
      - REDIS_URL=redis://odo-redis:6379
    depends_on:
      - odo-db
      - odo-redis
    networks:
      - odo-app-network

  odo-db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_DB=odoflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dainh4123
    ports:
      - "5430:5432"
    networks:
      - odo-app-network
    volumes:
      - odo_postgres_data:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*'
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  odo-redis:
    image: redis:7.2-alpine
    restart: always
    ports:
      - "6370:6379"
    networks:
      - odo-app-network
    volumes:
      - odo_redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 2s
      retries: 20

volumes:
  odo_postgres_data:
  odo_redis_data:

networks:
  odo-app-network:
    driver: bridge